{"version":3,"sources":["webpack:///./src/components/member/Charts.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","victory__WEBPACK_IMPORTED_MODULE_3__","victory__WEBPACK_IMPORTED_MODULE_4__","victory__WEBPACK_IMPORTED_MODULE_5__","victory__WEBPACK_IMPORTED_MODULE_6__","Charts","_ref","max","weeks","wins","losses","missed","a","createElement","animate","duration","some","war","y","style","data","fill","tickValues","tickFormat","f","toFixed","tickCount","dependentAxis","label","height","x","title","centerTitle","orientation","gutter","colorScale","border","stroke","fontSize","name","symbol","type","propTypes","PropTypes","number","array","connect","state","individualMember","warHistory","forEach","index","Math","push","Date","week","toDateString","slice"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAK,EAAAE,GAAAE,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAKMa,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAKC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,KAAMC,EAArBJ,EAAqBI,OAAQC,EAA7BL,EAA6BK,OAA7B,OACXf,EAAAgB,EAAAC,cAAA,WACIjB,EAAAgB,EAAAC,cAACZ,EAAA,EAAD,CACIa,QAAS,CACLC,SAAU,MAGbJ,EAAOK,KAAK,SAAAC,GAAG,OAAY,EAARA,EAAIC,KACpBtB,EAAAgB,EAAAC,cAACX,EAAA,EAAD,CAAaiB,MAAO,CAAEC,KAAM,CAAEC,KAAM,QAAWD,KAAMT,IAExDD,EAAOM,KAAK,SAAAC,GAAG,OAAY,EAARA,EAAIC,KACpBtB,EAAAgB,EAAAC,cAACX,EAAA,EAAD,CACIiB,MAAO,CAAEC,KAAM,CAAEC,KAAM,WACvBD,KAAMV,IAGbD,EAAKO,KAAK,SAAAC,GAAG,OAAY,EAARA,EAAIC,KAClBtB,EAAAgB,EAAAC,cAACX,EAAA,EAAD,CAAaiB,MAAO,CAAEC,KAAM,CAAEC,KAAM,UAAaD,KAAMX,IAE3Db,EAAAgB,EAAAC,cAACV,EAAA,EAAD,CAAamB,WAAYd,IACzBZ,EAAAgB,EAAAC,cAACV,EAAA,EAAD,CACIoB,WAAY,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,IAC3BC,UAAWnB,EACXoB,eAAa,EACbC,MAAM,aAGdhC,EAAAgB,EAAAC,cAACT,EAAA,EAAD,CACIyB,OAAQ,GACRC,EAAG,IACHZ,EAAG,GACHa,MAAM,aACNC,aAAW,EACXC,YAAY,aACZC,OAAQ,GACRC,WAAY,CAAC,QAAS,SAAU,OAChChB,MAAO,CAAEiB,OAAQ,CAAEC,OAAQ,SAAWN,MAAO,CAAEO,SAAU,KACzDlB,KAAM,CACF,CAAEmB,KAAM,OAAQC,OAAQ,CAAEC,KAAM,SAChC,CAAEF,KAAM,UACR,CAAEA,KAAM,eA0BxBlC,EAAOqC,UAAY,CACfnC,IAAKoC,IAAUC,OACfpC,MAAOmC,IAAUE,MACjBpC,KAAMkC,IAAUE,MAChBnC,OAAQiC,IAAUE,MAClBlC,OAAQgC,IAAUE,OAGPC,sBA5BS,SAAAC,GACpB,IAAM3B,EAAO,CACTb,IAAK,EACLC,MAAO,GACPC,KAAM,CAAC,CAAEqB,EAAG,EAAGZ,EAAG,IAClBR,OAAQ,CAAC,CAAEoB,EAAG,EAAGZ,EAAG,IACpBP,OAAQ,CAAC,CAAEmB,EAAG,EAAGZ,EAAG,KAWxB,OARA6B,EAAMC,iBAAiBC,WAAWC,QAAQ,SAACjC,EAAKkC,GAC5C/B,EAAKb,IAAM6C,KAAK7C,IAAIa,EAAKb,IAAKU,EAAIR,KAAOQ,EAAIP,OAASO,EAAIN,QAC1DS,EAAKZ,MAAM6C,KAAK,IAAIC,KAAKrC,EAAIsC,MAAMC,eAAeC,MAAM,EAAG,KAC3DrC,EAAKX,KAAK4C,KAAK,CAAEvB,EAAGqB,EAAQ,EAAGjC,EAAGD,EAAIR,OACtCW,EAAKV,OAAO2C,KAAK,CAAEvB,EAAGqB,EAAQ,EAAGjC,EAAGD,EAAIP,SACxCU,EAAKT,OAAO0C,KAAK,CAAEvB,EAAGqB,EAAQ,EAAGjC,EAAGD,EAAIN,WAGrCS,GAWI0B,CAAyBzC","file":"./scripts/3.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { VictoryArea, VictoryStack, VictoryLegend, VictoryAxis } from 'victory';\r\n\r\nconst Charts = ({ max, weeks, wins, losses, missed }) => (\r\n    <div>\r\n        <VictoryStack\r\n            animate={{\r\n                duration: 100\r\n            }}\r\n        >\r\n            {missed.some(war => war.y > 0) && (\r\n                <VictoryArea style={{ data: { fill: 'red' } }} data={missed} />\r\n            )}\r\n            {losses.some(war => war.y > 0) && (\r\n                <VictoryArea\r\n                    style={{ data: { fill: 'orange' } }}\r\n                    data={losses}\r\n                />\r\n            )}\r\n            {wins.some(war => war.y > 0) && (\r\n                <VictoryArea style={{ data: { fill: 'green' } }} data={wins} />\r\n            )}\r\n            <VictoryAxis tickValues={weeks} />\r\n            <VictoryAxis\r\n                tickFormat={f => f.toFixed(0)}\r\n                tickCount={max}\r\n                dependentAxis\r\n                label=\"Battles\"\r\n            />\r\n        </VictoryStack>\r\n        <VictoryLegend\r\n            height={75}\r\n            x={125}\r\n            y={10}\r\n            title=\"War Legend\"\r\n            centerTitle\r\n            orientation=\"horizontal\"\r\n            gutter={20}\r\n            colorScale={['green', 'orange', 'red']}\r\n            style={{ border: { stroke: 'black' }, title: { fontSize: 20 } }}\r\n            data={[\r\n                { name: 'Wins', symbol: { type: 'star' } },\r\n                { name: 'Losses' },\r\n                { name: 'Missed' }\r\n            ]}\r\n        />\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n    const data = {\r\n        max: 0,\r\n        weeks: [],\r\n        wins: [{ x: 0, y: 0 }],\r\n        losses: [{ x: 0, y: 0 }],\r\n        missed: [{ x: 0, y: 0 }]\r\n    };\r\n\r\n    state.individualMember.warHistory.forEach((war, index) => {\r\n        data.max = Math.max(data.max, war.wins + war.losses + war.missed);\r\n        data.weeks.push(new Date(war.week).toDateString().slice(4, 10));\r\n        data.wins.push({ x: index + 1, y: war.wins });\r\n        data.losses.push({ x: index + 1, y: war.losses });\r\n        data.missed.push({ x: index + 1, y: war.missed });\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nCharts.propTypes = {\r\n    max: PropTypes.number,\r\n    weeks: PropTypes.array,\r\n    wins: PropTypes.array,\r\n    losses: PropTypes.array,\r\n    missed: PropTypes.array\r\n};\r\n\r\nexport default connect(mapStateToProps)(Charts);\r\n"],"sourceRoot":""}